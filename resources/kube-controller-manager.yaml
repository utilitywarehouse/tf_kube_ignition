apiVersion: v1
kind: Pod
metadata:
  name: kube-controller-manager
  namespace: kube-system
  labels:
    app: kube-controller
spec:
  containers:
    - name: kube-controller-manager
      image: k8s.gcr.io/kube-controller-manager:${kubernetes_version}
      command:
        - kube-controller-manager
        ${cloud_config == "" ? "" : "- --cloud-config=/etc/kubernetes/config/cloud_provider/cloud.conf"}
        ${cloud_provider == "" ? "" : "- --cloud-provider=${cloud_provider}"}
        ${feature_gates == "" ? "" : "- --feature-gates=${feature_gates}"}
        - --allocate-node-cidrs=true
        - --authentication-kubeconfig=/etc/kubernetes/config/controller-manager.conf
        - --authorization-kubeconfig=/etc/kubernetes/config/controller-manager.conf
        - --cluster-cidr=${pod_network}
        - --configure-cloud-routes=false
        - --kubeconfig=/etc/kubernetes/config/controller-manager.conf
        - --leader-elect=true
        - --node-monitor-grace-period=120s
        - --root-ca-file=/etc/kubernetes/ssl/ca.pem
        - --service-account-private-key-file=/etc/kubernetes/ssl/signing-key.pem
        - --use-service-account-credentials
        - --v=0
      livenessProbe:
        httpGet:
          host: 127.0.0.1
          path: /healthz
%{if pre_1_22_healthcheck_port}
          port: 10252
%{else}
          port: 10257
          scheme: HTTPS
%{endif}
        initialDelaySeconds: 15
        timeoutSeconds: 15
      volumeMounts:
        - mountPath: /etc/kubernetes/ssl
          name: ssl-certs-kubernetes
          readOnly: true
        - mountPath: /etc/ssl/certs
          name: ssl-certs-host
          readOnly: true
        - mountPath: /etc/kubernetes/config
          name: config
          readOnly: true
  hostNetwork: true
  volumes:
    - hostPath:
        path: /etc/kubernetes/ssl
      name: ssl-certs-kubernetes
    - hostPath:
        path: /usr/share/ca-certificates
      name: ssl-certs-host
    - hostPath:
        path: /etc/kubernetes/config
      name: config
