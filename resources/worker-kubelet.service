[Unit]
Description=Kubelet docker container
Requires=docker.service network-online.target
After=docker.service network-online.target

[Service]
ExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests
ExecStartPre=/usr/bin/mkdir -p /var/log/containers
ExecStartPre=/usr/bin/mkdir -p /opt/cni/bin
ExecStartPre=/usr/bin/mkdir -p /var/lib/cni
ExecStartPre=/usr/bin/mkdir -p /etc/cni/net.d
ExecStartPre=/usr/bin/mkdir -p /var/lib/docker
ExecStartPre=/usr/bin/mkdir -p /var/lib/kubelet
ExecStartPre=/usr/bin/mkdir -p /run/kubelet
ExecStartPre=/usr/bin/mkdir -p /var/run/calico
ExecStartPre=/usr/bin/mkdir -p /var/lib/calico
# This is a partial workaround to this upstream Kubernetes issue:
#  https://github.com/kubernetes/kubernetes/issues/41916#issuecomment-312428731
ExecStartPre=/sbin/sysctl -w net.ipv4.tcp_retries2=8
ExecStartPre=/opt/bin/cfssl-new-cert
ExecStart=/usr/bin/docker run \
  --net=host \
  --pid=host \
  --privileged \
  -v /etc/cni/net.d:/etc/cni/net.d \
  -v /var/lib/cni:/var/lib/cni \
  -v /opt/cni/bin:/opt/cni/bin \
  -v /etc/kubernetes:/etc/kubernetes \
  -v /etc/machine-id:/etc/machine-id:ro \
  -v /etc/os-release:/etc/os-release:ro \
  -v /etc/ssl/certs:/etc/ssl/certs:ro \
  -v /usr/share/ca-certificates:/usr/share/ca-certificates:ro \
  -v /lib/modules:/lib/modules \
  -v /usr/sbin/modprobe:/usr/sbin/modprobe \
  -v /run:/run \
  -v /var/lib/docker:/var/lib/docker \
  -v /var/lib/kubelet:/var/lib/kubelet \
  -v /var/log:/var/log \
  -v /var/lib/calico:/var/lib/calico \
  -v /var/run/calico:/var/run/calico \
  ${kubelet_image_url}:${kubelet_image_tag} \
    kubelet \
    --kubeconfig=/var/lib/kubelet/kubeconfig \
    --node-labels=role=${role} \
    --container-runtime=docker \
    --network-plugin=cni \
    --cni-bin-dir=/opt/cni/bin \
    --cni-conf-dir=/etc/cni/net.d \
    --register-node=true \
    --allow-privileged=true \
    --pod-manifest-path=/etc/kubernetes/manifests \
    --cluster-dns=${cluster_dns} \
    --cluster_domain=cluster.local \
    ${cloud_provider == "" ? "" : "--cloud-provider=${cloud_provider}"} \
    --eviction-soft=memory.available<2Gi,nodefs.available<4Gi \
    --eviction-soft-grace-period=memory.available=1m,nodefs.available=1m \
    --eviction-max-pod-grace-period=30 \
    --eviction-hard=memory.available<1Gi,nodefs.available<2Gi \
    --serialize-image-pulls=false \
    --v=0
Restart=always
RestartSec=10
KillMode=process

[Install]
WantedBy=multi-user.target
